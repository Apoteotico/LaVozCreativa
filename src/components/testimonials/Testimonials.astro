---
const testimonials = [
  {
    id: 1,
    name: "Agustina",
    role: "Estudiante",
    content:
      "Para m√≠, fue un espacio de sanaci√≥n y aprendizaje. Aprend√≠ a escuchar esa voz interna que siempre est√° pero no o√≠mos. Aprend√≠ a jugar con ella, a conectarme, a sanar a trav√©s de ella.",
  },
  {
    id: 2,
    name: "Ayelen",
    role: "Profesional",
    content:
      "Son clases hermosas donde pod√©s dejar que no solo fluya tu voz, sino todo tu cuerpo. Clau te da la confianza para poder expresarte de la manera que sientas. Te gu√≠a la voz y el cuerpo por lugares nuevos, explorando y sintiendo!",
  },
  {
    id: 3,
    name: "Belen",
    role: "Artista",
    content:
      "La forma que Claudia tiene de transmitir su amplia sabidur√≠a es profunda, amable y compasiva. Sirve de apoyo para la vida misma, para recuperar la salud f√≠sica y psico-emocional en la rutina diaria.",
  },
  {
    id: 4,
    name: "Carlina",
    role: "Estudiante",
    content:
      "Recomendar√≠a las clases de Claudia sin dudas. Si buscas trabajar la voz desde un lugar integral, es ac√°!. Es una excelente profesional y persona, siempre dispuesta a acompa√±arte en tu proceso.",
  },
  {
    id: 5,
    name: "Fabian",
    role: "Profesional",
    content:
      "Adentrarse en la profundidad del canto consciente es una experiencia transformadora. Hacerlo de tu mano @Claudia In√©s ü¶ã, acompa√±ado de este hermoso grupo de personas, afirma y renueva el sentir pleno de unidad.",
  },
  {
    id: 6,
    name: "Flavia",
    role: "Artista",
    content:
      "Es un curso para hacerlo, particularmente me cambi√≥ la manera de expresarme, amigarme con mi voz y sanar cosas que me ven√≠an pasando. Clau lo cre√≥ tan ameno, su manera de re√≠rse atrapa y genera confianza. ‚ù§Ô∏è",
  },
  {
    id: 7,
    name: "Lourdes",
    role: "Estudiante",
    content:
      "La expresi√≥n vocal fue un espacio de transformaci√≥n, de reconexi√≥n conmigo, de volver a escuchar mi voz, mi ritmo. Me ayud√≥ a conectar con el presente y con mi cuerpo, fue un volver a m√≠. Una experiencia hermosa ‚ú®üíñ‚ú®, y Clau un ser maravilloso, una gran gu√≠a y compa√±era de este proceso.",
  },
  {
    id: 8,
    name: "Mauricio",
    role: "Profesional",
    content:
      "Celebro profundamente la apertura que me brind√≥ y brinda siempre este espacio! En los encuentros siempre me sent√≠ alentado a ser libre con mis pensamientos, sensaciones, sentires y que mi voz sea canal y herramienta para ello!",
  },
  {
    id: 9,
    name: "Micaela",
    role: "Artista",
    content:
      "Clau! Te quer√≠a agradecer por el encuentro de ayer! El espacio que abriste, todo lo brindado! Me conect√© much√≠simo y te quiero agradecer por hacer del encuentro un espacio de transformaci√≥n y magia! Gracias profundas por ser canal y tu generosidad de compartir tus conocimientos de esa manera. üíó",
  },
  {
    id: 10,
    name: "Tatiana",
    role: "Estudiante",
    content:
      "Para m√≠ este programa me trajo, conscientemente, el recordatorio y la plena certeza de que volver a m√≠ SIEMPRE es medicina, que usar la voz significa contar nuestro propio relato y hacerla vibrar es confiar en esa verdad que estamos diciendo, cada paso, fue sincr√≥nico a mi proceso, m√°gico, sanador. Gracias Ine, que vos brilles alumbr√≥ mi camino. üå†",
  },
];
---

<section id="testimonios" class="py-20">
  <div class="max-w-6xl mx-auto px-4 sm:px-1 lg:px-8">
    <h2 class="text-4xl text-center mb-6 text-custom-title">
      Lo que dicen nuestros estudiantes
    </h2>

    <div class="relative max-w-100%">
      <div class="overflow-hidden rounded-2xl">
        <div
          class="testimonial-carousel flex transition-transform duration-500 ease-in-out"
        >
          {
            testimonials.map((testimonial) => (
              <div class="testimonial-item w-full flex-shrink-0 p-6 sm:p-8">
                <div class="relative bg-white rounded-2xl p-6 sm:p-8 shadow-lg transform transition-transform duration-500 hover:scale-[1.02]">
                  <div
                    class="absolute -top-4 -left-4 w-10 h-10 sm:w-12 sm:h-12 rounded-full flex items-center justify-center shadow-lg"
                    style="background: #711f83e8;"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      class="w-5 h-5 sm:w-6 sm:h-6 text-white"
                    >
                      <path d="M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z" />
                      <path d="M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z" />
                    </svg>
                  </div>
                  <div class="relative z-10">
                    <p class="text-custom-text text-base sm:text-lg leading-relaxed mb-4 sm:mb-6">
                      {testimonial.content}
                    </p>
                    <div class="border-t border-gray-100 pt-3 sm:pt-4">
                      <div class="font-semibold text-custom-title text-lg sm:text-xl">
                        {testimonial.name}
                      </div>
                      <div class="text-sm sm:text-base text-custom-text">
                        {testimonial.role}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </div>

      <!-- Flechas de navegaci√≥n -->
      <button
        id="prev-testimonial"
        class="absolute left-2 sm:left-0 top-1/2 -translate-y-1/2 w-8 h-8 sm:w-10 sm:h-10 text-white rounded-full shadow-lg flex items-center justify-center transition-all focus:ring-2 focus:ring-[var(--color-pink)]"
        style="background: #711f83e8;"
        aria-label="Anterior testimonio"
        >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="h-5 w-5 sm:h-6 sm:w-6 text-custom-text"
        >
          <path d="m15 18-6-6 6-6"></path>
        </svg>
      </button>
      <button
        id="next-testimonial"
        class="absolute right-2 sm:right-0 top-1/2 -translate-y-1/2 w-8 h-8 sm:w-12 sm:h-12 text-white rounded-full shadow-lg flex items-center justify-center transition-all focus:ring-2 focus:ring-[var(--color-pink)]"
        style="background: #711f83e8;"
        aria-label="Siguiente testimonio"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="h-5 w-5 sm:h-6 sm:w-6 text-custom-text"
        >
          <path d="m9 18 6-6-6-6"></path>
        </svg>
      </button>

      <!-- Indicadores -->
      <div class="flex justify-center gap-3">
        {
          testimonials.map((_, index) => (
            <button
              data-index={index}
              class="indicator w-2 h-2 sm:w-3 sm:h-3 rounded-full transition-all duration-300 bg-gray-300 hover:bg-gray-400"
              aria-hidden="true"
              tabindex="-1"
            />
          ))
        }
      </div>
    </div>
  </div>
</section>

<style>
  .testimonial-carousel {
    display: flex;
    transition: transform 0.5s ease-in-out;
    width: 100%;
  }

  .testimonial-item {
    flex: 0 0 100%;
    min-width: 100%;
  }

  /* Mantener colores personalizados */
  :root {
    --custom-pink: hsl(311, 38%, 61%);
    --custom-yellow: hsl(61, 72%, 63%);
    --custom-text: #666666;
    --custom-title: #000000;
  }
</style>

<script>
  function initCarousel() {
    const carousel = document.querySelector(".testimonial-carousel");
    const items = document.querySelectorAll(".testimonial-item");
    const indicatorsT = document.querySelectorAll(".indicator");
    const prevButton = document.getElementById("prev-testimonial");
    const nextButton = document.getElementById("next-testimonial");

    if (!carousel || !items.length) return;

    let currentIndex = 0;
    const totalItems = items.length;

    function updateCarousel() {
      if (carousel instanceof HTMLElement) {
        carousel.style.transform = `translateX(-${currentIndex * 100}%)`;
      }

      // Update indicatorsT
      indicatorsT.forEach((indicator, index) => {
        const el = indicator as HTMLElement;
        if (index === currentIndex) {
          el.classList.add("active");
          el.classList.remove("bg-gray-300");
          el.style.background = "#711f83e8";
        } else {
          el.classList.remove("active");
          el.style.background = "";
          el.classList.add("bg-gray-300");
        }
      });
    }

    let interval: number;

    function startAutoRotation() {
      interval = setInterval(() => {
        currentIndex = (currentIndex + 1) % totalItems;
        updateCarousel();
      }, 5000);
    }

    function resetInterval() {
      clearInterval(interval);
      startAutoRotation();
    }

    // Event listeners
    prevButton?.addEventListener("click", () => {
      currentIndex = (currentIndex - 1 + totalItems) % totalItems;
      updateCarousel();
      resetInterval();
    });

    nextButton?.addEventListener("click", () => {
      currentIndex = (currentIndex + 1) % totalItems;
      updateCarousel();
      resetInterval();
    });

    indicatorsT.forEach((indicator, index) => {
      indicator.addEventListener("click", () => {
        currentIndex = index;
        updateCarousel();
        resetInterval();
      });
    });

    // Start auto-rotation
    startAutoRotation();

    // Pause auto-rotation when hovering
    carousel.addEventListener("mouseenter", () => clearInterval(interval));
    carousel.addEventListener("mouseleave", startAutoRotation);
  }

  // Initialize on page load
  document.addEventListener("astro:page-load", initCarousel);
  // Also initialize on direct load
  initCarousel();
</script>
